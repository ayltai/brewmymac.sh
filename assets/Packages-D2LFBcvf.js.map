{"version":3,"file":"Packages-D2LFBcvf.js","sources":["../../src/routes/Packages.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport MiniSearch from 'minisearch';\nimport React, { useCallback, useContext, useEffect, useRef, useState, useTransition, } from 'react';\nimport { useTranslation, } from 'react-i18next';\n\nimport { useCaskQuery, useFormulaQuery, useIngredientsQuery, useSearchQuery, } from '../apis';\nimport { SelectableCardView, } from '../components/CardView';\nimport { DetailsView, } from '../components/DetailsView';\nimport { GridView, SectionedGridView, } from '../components/GridView';\nimport { Loading, } from '../components/Loading';\nimport { SearchInput, } from '../components/SearchInput';\nimport { Terminal, } from '../components/Terminal';\nimport { FirebaseContext, } from '../contexts';\nimport { HOMEBREW_REFRESH_INTERVAL, INGREDIENT_CATEGORIES, MIN_SEARCH_LENGTH, SEARCH_FUZZINESS, RECIPE_COMMANDS, } from '../constants';\nimport { useAppDispatch, useAppSelector, } from '../hooks';\nimport type { Ingredient, } from '../models';\nimport { addIngredient, removeIngredient, } from '../states';\nimport { handleError, logAddToCart, logPageView, logRemoveFromCart, logSearch, } from '../utils';\n\nexport const Packages = () => {\n    const [ query,              setQuery,              ] = useState('');\n    const [ matchedIngredients, setMatchedIngredients, ] = useState<Ingredient[] | undefined>();\n\n    const { ingredients, } : { ingredients : Ingredient[], } = useAppSelector(state => state.recipe);\n\n    const { data : ingredientsData, error : ingredientsError, } = useIngredientsQuery(undefined, {\n        pollingInterval : HOMEBREW_REFRESH_INTERVAL,\n    });\n\n    const { data : caskData, error : caskError, } = useCaskQuery(undefined, {\n        pollingInterval : HOMEBREW_REFRESH_INTERVAL,\n    });\n\n    const { data : formulaData, error : formulaError, } = useFormulaQuery(undefined, {\n        pollingInterval : HOMEBREW_REFRESH_INTERVAL,\n    });\n\n    const { data : searchData, error : searchError, isFetching, isLoading, } = useSearchQuery(query, {\n        skip : query.length < MIN_SEARCH_LENGTH,\n    });\n\n    const searchEngine = useRef<MiniSearch<Omit<Ingredient, 'imageUrl' | 'infoUrl' | 'source'>>>(new MiniSearch({\n        fields        : [\n            'id',\n            'name',\n            'description',\n            'author',\n        ],\n        storeFields   : [\n            'id',\n            'name',\n            'description',\n            'imageUrl',\n            'infoUrl',\n            'author',\n            'source',\n        ],\n        searchOptions : {\n            fuzzy : SEARCH_FUZZINESS,\n        },\n    }));\n\n    const dispatch = useAppDispatch();\n\n    const app = useContext(FirebaseContext);\n\n    const [ isPending, startTransition, ] = useTransition();\n\n    const { t, } = useTranslation();\n\n    const search = useCallback((keyword : string) => {\n        if (app) logSearch(app, {\n            query : keyword,\n        });\n\n        return searchEngine.current.search(keyword).map(result => ({\n            id          : result.id,\n            name        : result.name,\n            description : result.description,\n            imageUrl    : result.imageUrl,\n            infoUrl     : result.infoUrl,\n            author      : result.author,\n            source      : result.source,\n        }));\n    }, [ app, ]);\n\n    const handleSearch = (keyword? : string) => setQuery(keyword ?? '');\n\n    const IngredientView = ({\n        ingredient,\n    } : {\n        ingredient : Ingredient,\n    }) => {\n        const handleChange = (selected : boolean) => {\n            if (app) {\n                if (selected) {\n                    logAddToCart(app, {\n                        itemId : ingredient.id,\n                    });\n                } else {\n                    logRemoveFromCart(app, {\n                        itemId : ingredient.id,\n                    });\n                }\n            }\n\n            dispatch(selected ? addIngredient(ingredient) : removeIngredient(ingredient));\n        };\n\n        return (\n            <SelectableCardView\n                key={ingredient.id}\n                selected={ingredients.some(selected => selected.id === ingredient.id)}\n                color='primary'\n                title={ingredient.name}\n                subtitle={ingredient.author}\n                description={ingredient.description}\n                onChange={handleChange}>\n                <DetailsView\n                    description={ingredient.description}\n                    infoUrl={ingredient.infoUrl} />\n            </SelectableCardView>\n        );\n    };\n\n    useEffect(() => {\n        searchEngine.current.removeAll();\n\n        if (caskData) searchEngine.current.addAll(caskData.map(item => ({\n            ...item,\n            id : `${item.source}/${item.id}`,\n        })));\n\n        if (formulaData) searchEngine.current.addAll(formulaData.map(item => ({\n            ...item,\n            id : `${item.source}/${item.id}`,\n        })));\n\n        if (searchData) searchEngine.current.addAll(searchData.map(item => ({\n            ...item,\n            id : `${item.source}/${item.id}`,\n        })));\n\n        if (query.length < MIN_SEARCH_LENGTH) {\n            setMatchedIngredients(undefined);\n        } else {\n            startTransition(() => setMatchedIngredients(search(query)));\n        }\n    }, [ caskData, formulaData, search, searchData, query, ]);\n\n    useEffect(() => {\n        if (ingredientsError) handleError(ingredientsError);\n        if (caskError) handleError(caskError);\n        if (formulaError) handleError(formulaError);\n        if (searchError) handleError(searchError);\n    }, [ ingredientsError, caskError, formulaError, searchError, ]);\n\n    useEffect(() => {\n        if (app) logPageView(app, {\n            pageName : 'Packages',\n            route    : '/packages',\n        });\n    }, [ app, ]);\n\n    return (\n        <>\n            <Stack\n                paddingBottom={16}\n                spacing={2}\n                alignItems='center'>\n                <Box\n                    sx={{\n                        animation            : 'gradient 16s ease infinite',\n                        background           : 'linear-gradient(315deg, #e5aac3 3%, #e8f5c8 38%, #07a3b2 68%, #6cc6cb 98%)',\n                        backgroundSize       : '400%',\n                        backgroundAttachment : 'fixed',\n                        overflow             : 'hidden',\n                    }}\n                    width='100%'\n                    padding={8}\n                    position='relative'\n                    textAlign='center'>\n                    <div className='wave' />\n                    <div className='wave' />\n                    <div className='wave' />\n                    <Container maxWidth='lg'>\n                        <Typography\n                            paddingX={8}\n                            paddingBottom={8}\n                            textAlign='center'\n                            variant='h2'>\n                            {t('packages.tagline')}\n                        </Typography>\n                        <SearchInput\n                            loading={isPending || isFetching || isLoading}\n                            hint={t('packages.search.hint')}\n                            onSearch={handleSearch} />\n                    </Container>\n                </Box>\n                {!matchedIngredients && (\n                    <Container maxWidth='lg'>\n                        <Stack\n                            paddingTop={8}\n                            display='flex'\n                            direction='row'>\n                            <Box flexGrow={1}>\n                                <Typography\n                                    gutterBottom\n                                    paddingTop={2}\n                                    color='primary'\n                                    variant='h4'>\n                                    {t('packages.about.title')}\n                                </Typography>\n                                <Typography variant='subtitle1'>\n                                    {t('packages.about.description')}\n                                </Typography>\n                            </Box>\n                            <Box marginRight={-4}>\n                                <Terminal commands={RECIPE_COMMANDS} />\n                            </Box>\n                        </Stack>\n                    </Container>\n                )}\n                <Container maxWidth='lg'>\n                    {matchedIngredients && (\n                        <GridView sx={{\n                            paddingTop : 4,\n                        }}>\n                            {matchedIngredients.map(ingredient => (\n                                <IngredientView\n                                    key={ingredient.id}\n                                    ingredient={ingredient} />\n                            ))}\n                        </GridView>\n                    )}\n                    {!matchedIngredients && ingredientsData && INGREDIENT_CATEGORIES.map(category => (\n                        <SectionedGridView\n                            sx={{\n                                paddingY : 4,\n                            }}\n                            key={category}\n                            paddingTop={4}\n                            color='primary'\n                            title={category}>\n                            {ingredientsData.filter(ingredient => ingredient.category === category).map(ingredient => (\n                                <IngredientView\n                                    key={ingredient.id}\n                                    ingredient={ingredient} />\n                            ))}\n                        </SectionedGridView>\n                    ))}\n                </Container>\n            </Stack>\n            <Loading show={!caskData || !formulaData || !!caskError || !!formulaError || !!searchError}>\n                <Typography color={theme => theme.palette.getContrastText(theme.palette.text.primary)}>\n                    {t('packages.loading')}\n                </Typography>\n            </Loading>\n        </>\n    );\n};\n"],"names":["Packages","query","setQuery","useState","matchedIngredients","setMatchedIngredients","ingredients","useAppSelector","state","ingredientsData","ingredientsError","useIngredientsQuery","HOMEBREW_REFRESH_INTERVAL","caskData","caskError","useCaskQuery","formulaData","formulaError","useFormulaQuery","searchData","searchError","isFetching","isLoading","useSearchQuery","MIN_SEARCH_LENGTH","searchEngine","useRef","MiniSearch","SEARCH_FUZZINESS","dispatch","useAppDispatch","app","useContext","FirebaseContext","isPending","startTransition","useTransition","t","useTranslation","search","useCallback","keyword","logSearch","result","handleSearch","IngredientView","ingredient","handleChange","selected","logAddToCart","logRemoveFromCart","addIngredient","removeIngredient","jsx","SelectableCardView","DetailsView","useEffect","item","handleError","logPageView","jsxs","Fragment","Stack","Box","Container","Typography","SearchInput","Terminal","RECIPE_COMMANDS","GridView","INGREDIENT_CATEGORIES","category","SectionedGridView","Loading","theme"],"mappings":"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"}